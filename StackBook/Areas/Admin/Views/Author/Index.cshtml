@model X.PagedList.IPagedList<StackBook.Models.Author>
@using X.PagedList.Mvc.Core

@{
    ViewData["Title"] = "Authors";
}

<div class="container mt-4">
    <div class="row pt-4 pb-4">
        <div class="col-md-6">
            <h1 class="text-primary">Authors</h1>
        </div>
        <div class="col-md-6 text-md-end text-center">
            <a  asp-action="Create" class="btn btn-primary">
                <i class="fa-solid fa-plus"></i> Create New Author
            </a>
        </div>
    </div>

    <table class="table table-striped table-hover">
        <thead class="table-dark">
            <tr>
                <th>#</th>
                <th>Author Name</th>
                <th>Number of Books</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Any())
            {
                int index = 1;
                foreach (var author in Model)
                {
                    <tr>
                        <td>@index</td>
                        <td>@author.AuthorName</td>
                        <td>@author.Books.Count</td>
                        <td>
                            <a style="width: 70px;" asp-action="Edit" asp-route-AuthorId="@author.AuthorId"
                               class="btn btn-primary btn-sm"><i class="fa-solid fa-pen-to-square"></i>  Edit</a>
                            <button style="width: 70px;" type="button" class="btn btn-danger btn-sm" data-bs-toggle="modal" data-bs-target="#deleteModal" data-author-id="@author.AuthorId" data-author-name="@author.AuthorName">
                                <i class="fa-solid fa-trash"></i> Delete
                            </button>
                        </td>
                    </tr>
                    index++;
                }
            }
            else
            {
                <tr>
                    <td colspan="4" class="text-center">No authors found.</td>
                </tr>
            }
        </tbody>
    </table>
    <!-- Pagination -->
    <div class="d-flex justify-content-end mt-4">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page }),
                 new PagedListRenderOptions
        {
            Display = PagedListDisplayMode.IfNeeded,
            UlElementClasses = new[] { "pagination" },
            LiElementClasses = new[] { "page-item" },
            PageClasses = new[] { "page-link" },
            ActiveLiElementClass = "active",
            PageCountAndCurrentLocationFormat = "Page {0} of {1}",
            MaximumPageNumbersToDisplay = 5
        })
    </div>
</div>

<!-- Bootstrap Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title text-danger" id="deleteModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete the author <strong id="authorName"></strong>?</p>
            </div>
            <div class="modal-footer">
                <form id="deleteForm" method="post" asp-action="Delete">
                    <input type="hidden" id="authorId" name="AuthorId" />
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const deleteModal = document.getElementById('deleteModal');
        deleteModal.addEventListener('show.bs.modal', function (event) {
            const button = event.relatedTarget;
            const authorId = button.getAttribute('data-author-id');
            const authorName = button.getAttribute('data-author-name');

            const modalTitle = deleteModal.querySelector('#authorName');
            const deleteForm = deleteModal.querySelector('#deleteForm');
            const authorIdInput = deleteModal.querySelector('#authorId');

            modalTitle.textContent = authorName;
            authorIdInput.value = authorId;
        });
    </script>
}
