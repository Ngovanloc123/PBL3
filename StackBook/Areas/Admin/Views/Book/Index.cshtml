@model X.PagedList.IPagedList<StackBook.Models.Book>
@using X.PagedList.Mvc.Core

@{
	ViewData["Title"] = "Manager Book";
}

<div class="container">
	<div class="row pt-4 pb-4">
		<div class="col-md-6">
			<h1 class="text-primary">Book List</h1>
		</div>
		<div class="col-md-6 text-md-end text-center">
			<a asp-area="Admin" asp-controller="Book" asp-action="Create" class="btn btn-primary">
				<i class="fa-solid fa-plus"></i> Create New Book
			</a>
		</div>
	</div>

	<div class="table-responsive">
		<table class="table table-bordered table-striped">
			<thead class="table-dark">
				<tr>
					<th>#</th>
					<th style="width: 20%;">Title</th>
					<th style="width: 10%;" class="d-none d-md-table-cell">Authors</th>
					<th class="d-none d-lg-table-cell">Price</th>
					<th>Stock</th>
					<th class="d-none d-xl-table-cell">Publication</th>
					<th class="d-none d-md-table-cell">Category</th>
					<th class="d-none d-lg-table-cell">Image</th>
					<th style="width: 10%;" >Actions</th>
				</tr>
			</thead>
			<tbody>
				@{
					var index = 1;
				}	
				@foreach (var obj in Model)
				{
					<tr>
						<td>@index</td>
						<td style="width: 20%;">
							<span title="@obj.BookTitle" >
								@obj.BookTitle
							</span>
						</td>
						<td style="width: 10%; class="d-none d-md-table-cell">
							<ul class="list-unstyled mb-0">
								@foreach (var author in obj.Authors)
								{
									<li>
										<span class="d-inline-block" title="@author.AuthorName">
											@author.AuthorName
										</span>
									</li>
								}
							</ul>
						</td>
						<td class="d-none d-lg-table-cell">@obj.Price$</td>
						<td>@obj.Stock</td>
						<td class="d-none d-xl-table-cell">@obj.CreatedBook.ToString("dd-MM-yyyy")</td>
						<td class="d-none d-md-table-cell">
							<ul class="list-unstyled mb-0">
								@foreach (var category in obj.Categories)
								{
									<li>
										<span class="d-inline-block" title="@category.CategoryName">
											@category.CategoryName
										</span>
									</li>
								}
							</ul>
						</td>
						<td class="d-none d-lg-table-cell text-center">
							@if (!string.IsNullOrEmpty(obj.ImageURL))
							{
								<img src="@obj.ImageURL" alt="Book Image" class="img-thumbnail" style="width: 50px; height: auto;" />
							}
							else
							{
								<span>No Image</span>
							}
						</td>
						<td style="width: 15%;">
							<a style="width: 70px;" asp-controller="Book" asp-action="Edit" asp-route-BookId="@obj.BookId" class="btn btn-primary btn-sm mb-2">
									<i class="fa-solid fa-pen-to-square"></i> Edit
								</a>
							<a style="width: 70px;" data-bs-id=@obj.BookId class="btn btn-danger btn-sm mb-2" data-bs-toggle="modal"
								   data-bs-target="#delete-book-modal">
									<i class="fa-solid fa-trash"></i> Delete
								</a>
						</td>
					</tr>
					index++;
				}
			</tbody>
		</table>
		<!-- Pagination -->
		<div class="d-flex justify-content-end mt-4">
			@Html.PagedListPager(Model, page => Url.Action("Index", new { page }),
							new PagedListRenderOptions
			{
				Display = PagedListDisplayMode.IfNeeded,
				UlElementClasses = new[] { "pagination" },
				LiElementClasses = new[] { "page-item" },
				PageClasses = new[] { "page-link" },
				ActiveLiElementClass = "active",
				PageCountAndCurrentLocationFormat = "Page {0} of {1}",
				MaximumPageNumbersToDisplay = 5
			})
		</div>
	</div>
</div>

 @* Confirm modal delete Book *@
<div id="delete-book-modal" class="modal" tabindex="-1" role="dialog">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header d-flex justify-content-between">
				<h5 class="modal-title">Delete book?</h5>
				<button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>

			<div class="modal-body">
				<p>Are you sure you want to delete this book?</p>
			</div>
			<div class="modal-footer">
				<button id="btn-delete-book" type="button" class="btn btn-danger">Delete</button>
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
			</div>
		</div>
	</div>
</div>

<form method="POST" name="delete-book-form"></form>

<script>
	document.addEventListener('DOMContentLoaded', function () {
		const deleteBookModal = document.getElementById('delete-book-modal');
		const deleteForm = document.forms['delete-book-form'];
		const btnDeleteBook = document.getElementById('btn-delete-book');

		if (deleteBookModal) {
			deleteBookModal.addEventListener('show.bs.modal', function (event) {
				const button = event.relatedTarget;
				const bookId = button.getAttribute('data-bs-id');

				// Gán action cho form
				deleteForm.action = '/Admin/Book/Delete?BookId=' + bookId;
			});
		}

		btnDeleteBook?.addEventListener('click', function () {
			deleteForm.submit();
		});
	});
</script>

