@model StackBook.ViewModels.BookStatisticsVM
@using Newtonsoft.Json
@{
    ViewData["Title"] = "Book Statistics";
}

<div class="container-fluid py-4">
    <!-- Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <h1 class="text-success mb-0">
                    <i class="fas fa-book me-2"></i>Book Statistics
                </h1>
            </div>
        </div>
    </div>

    <!-- Filters -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-body">
                    <form method="get" class="row g-3">
                        <div class="col-md-3">
                            <label for="startDate" class="form-label">From Date</label>
                            <input type="date" class="form-control" id="startDate" name="startDate" 
                                   value="@(Model.StartDate?.ToString("yyyy-MM-dd"))">
                        </div>
                        <div class="col-md-3">
                            <label for="endDate" class="form-label">To Date</label>
                            <input type="date" class="form-control" id="endDate" name="endDate" 
                                   value="@(Model.EndDate?.ToString("yyyy-MM-dd"))">
                        </div>
                        <div class="col-md-3">
                            <label for="topCount" class="form-label">Number of displays</label>
                            <select class="form-select" id="topCount" name="topCount">
                                <option value="5">Top 5</option>
                                <option value="10">Top 10</option>
                                <option value="20" >Top 20</option>
                            </select>
                        </div>
                        <div class="col-md-3 d-flex align-items-end">
                            <button type="submit" class="btn btn-success me-2">
                                <i class="fas fa-search me-1"></i>Filter
                            </button>
                            <button type="button" class="btn btn-outline-secondary" onclick="resetFilters()">
                                <i class="fas fa-refresh me-1"></i>Reset
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Books by Category Chart -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow">
                <div class="card-header bg-success text-white">
                    <h6 class="m-0 font-weight-bold">
                        <i class="fas fa-chart-bar me-2"></i>Books by Category
                    </h6>
                </div>
                <div class="card-body">
                    <canvas id="bookCountByCategory" ></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Best Selling and Least Selling Books -->
    <div class="row mb-4">
        <!-- Best Selling Books -->
        <div class="col-lg-6 mb-4">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h6 class="m-0 font-weight-bold">
                        <i class="fas fa-fire me-2"></i>Best Selling Books
                    </h6>
                </div>
                <div class="card-body">
                    @if (Model.BestSellingBooks != null && Model.BestSellingBooks.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-striped table-sm">
                                <thead class="table-dark" style="font-size: 0.8em">
                                    <tr>
                                        <th>#</th>
                                        <th>Book Title</th>
                                        <th>Quantity Sold</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @for (int i = 0; i < Model.BestSellingBooks.Count; i++)
                                    {
                                        var book = Model.BestSellingBooks[i];
                                        <tr>
                                            <td>
                                                <span class="badge bg-primary">@(i + 1)</span>
                                            </td>
                                            <td class="fw-bold">@book.Title</td>
                                            @*  <td class="text-muted">@book.Author</td> *@
                                            <td>
                                                <span class="text-success fw-bold">@book.QuantitySold</span>
                                            </td>
                                            @* <td> *@
                                            @*     <span class="text-primary fw-bold">@book.Revenue.ToString("C0")</span> *@
                                            @* </td> *@
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-fire fa-3x text-muted mb-3"></i>
                            <p class="text-muted">No best-selling book data available</p>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Least Selling Books -->
        <div class="col-lg-6 mb-4">
            <div class="card shadow">
                <div class="card-header bg-warning text-white">
                    <h6 class="m-0 font-weight-bold">
                        <i class="fas fa-snowflake me-2"></i>Least Selling Books
                    </h6>
                </div>
                <div class="card-body">
                    @if (Model.LeastSellingBooks != null && Model.LeastSellingBooks.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-sm">
                                <thead class="table-dark " style="font-size: 0.8em">
                                    <tr>
                                        <th>#</th>
                                        <th>Book Title</th>
                                        @* <th>Author</th> *@
                                        <th>Quantity Sold</th>
                                        @* <th>Revenue</th> *@
                                    </tr>
                                </thead>
                                <tbody>
                                    @for (int i = 0; i < Model.LeastSellingBooks.Count; i++)
                                    {
                                        var book = Model.LeastSellingBooks[i];
                                        <tr>
                                            <td>
                                                <span class="badge bg-warning">@(i + 1)</span>
                                            </td>
                                            <td class="fw-bold">@book.Title</td>
                                            @* <td class="text-muted">@book.Author</td> *@
                                            <td>
                                                <span class="text-danger fw-bold">@book.QuantitySold</span>
                                            </td>
                                            @* <td> *@
                                            @*     <span class="text-warning fw-bold">@book.Revenue.ToString("C0")</span> *@
                                            @* </td> *@
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-snowflake fa-3x text-muted mb-3"></i>
                            <p class="text-muted">No least-selling book data available</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    


    
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Dữ liệu từ Razor
        var labelsbookCountByCategory = @Html.Raw(JsonConvert.SerializeObject(Model.BookCountByCategory.Labels));
        var valuesBookCountByCategory = @Html.Raw(JsonConvert.SerializeObject(Model.BookCountByCategory.Values));


        var labels = labelsbookCountByCategory;
        var values = valuesBookCountByCategory;

        function generateColors(count) {
            const baseColors = [
                'rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)',
                'rgba(255, 206, 86, 0.6)', 'rgba(75, 192, 192, 0.6)',
                'rgba(153, 102, 255, 0.6)', 'rgba(255, 159, 64, 0.6)',
                'rgba(199, 199, 199, 0.6)', 'rgba(83, 102, 255, 0.6)'
            ];
            const borderColors = baseColors.map(color => color.replace('0.6', '1'));
            return {
                background: baseColors.slice(0, count),
                border: borderColors.slice(0, count)
            };
        }

        const colors = generateColors(labels.length);

        // Chart: Current Month
        const currCtx = document.getElementById('bookCountByCategory').getContext('2d');
        new Chart(currCtx, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Number of Books',
                    data: values,
                    backgroundColor: colors.background,
                    borderColor: colors.border,
                    borderWidth: 1
                }]
            },
                    options: {
            responsive: true,
            plugins: {
                legend: { display: true },
                tooltip: {
                    callbacks: {
                        label: ctx => `${ctx.dataset.label}: ${ctx.parsed.y} books`
                    }
                }
            },
            layout: {
                padding: {
                    bottom: 40 
                }
            },
            scales: {
                x: {
                    ticks: {
                        autoSkip: false,     
                        maxRotation: 45,
                        minRotation: 45,
                        padding: 10        
                    }
                }
            }
        }

        });

        // Chart: Last Month
        const lastCtx = document.getElementById('categoryLastChart').getContext('2d');
        new Chart(lastCtx, {
            type: 'bar',
            data: {
                labels: labelsCategoryLast,
                datasets: [{
                    label: 'Number of Books',
                    data: valuesCategoryLast,
                    backgroundColor: colors.background,
                    borderColor: colors.border,
                    borderWidth: 1
                }]
            },
                    options: {
            responsive: true,
            plugins: {
                legend: { display: true },
                tooltip: {
                    callbacks: {
                        label: ctx => `${ctx.dataset.label}: ${ctx.parsed.y} books`
                    }
                }
            },
            layout: {
                padding: {
                    bottom: 40 
                }
            },
            scales: {
                x: {
                    ticks: {
                        autoSkip: false,     
                        maxRotation: 45,
                        minRotation: 45,
                        padding: 10     
                    }
                }
            }
        }

        });

        function resetFilters() {
            document.getElementById("startDate").value = "";
            document.getElementById("endDate").value = "";
            document.getElementById("topCount").value = "5";
        }
    </script>
}