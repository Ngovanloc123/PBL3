@model StackBook.ViewModels.UserStatisticsVM

@{
    ViewData["Title"] = "User Statistics";
}

<div class="container-fluid">
    <!-- Page Header -->
    <div class="row mb-4">
        <div class="col-12">
            <h2 class="text-primary">
                <i class="fas fa-users me-2"></i>User Statistics
            </h2>
            <p class="text-muted">Overview of user metrics and analytics</p>
        </div>
    </div>

    @* <!-- Error Message --> *@
    @* @if (TempData["Error"] != null) *@
    @* { *@
    @*     <div class="alert alert-danger alert-dismissible fade show" role="alert"> *@
    @*         <i class="fas fa-exclamation-triangle me-2"></i> *@
    @*         @TempData["Error"] *@
    @*         <button type="button" class="btn-close" data-bs-dismiss="alert"></button> *@
    @*     </div> *@
    @* } *@

    <!-- Statistics Cards -->
    <div class="row g-4 mb-4">
        <!-- Total Users -->
        <div class="col-xl-3 col-md-6">
            <div class="card bg-primary text-white h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="card-title text-uppercase mb-1">Total Users</h6>
                            <h2 class="mb-0">@Model.TotalUsers.ToString("N0")</h2>
                        </div>
                        <div class="text-white-50">
                            <i class="fas fa-users fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- New Users Today -->
        <div class="col-xl-3 col-md-6">
            <div class="card bg-success text-white h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="card-title text-uppercase mb-1">New Users Today</h6>
                            <h2 class="mb-0">@Model.NewUsersToday.ToString("N0")</h2>
                        </div>
                        <div class="text-white-50">
                            <i class="fas fa-user-plus fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- New Users This Month -->
        <div class="col-xl-3 col-md-6">
            <div class="card bg-info text-white h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="card-title text-uppercase mb-1">New This Month</h6>
                            <h2 class="mb-0">@Model.NewUsersThisMonth.ToString("N0")</h2>
                        </div>
                        <div class="text-white-50">
                            <i class="fas fa-calendar-plus fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Users With Orders -->
        <div class="col-xl-3 col-md-6">
            <div class="card bg-warning text-white h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="card-title text-uppercase mb-1">Users With Orders</h6>
                            <h2 class="mb-0">@Model.UsersWithOrders.ToString("N0")</h2>
                        </div>
                        <div class="text-white-50">
                            <i class="fas fa-shopping-cart fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Review Statistics -->
    <div class="row g-4 mb-4">
        <div class="col-md-6">
            <div class="card border-success h-100">
                <div class="card-header bg-light">
                    <h5 class="card-title text-success mb-0">
                        <i class="fas fa-thumbs-up me-2"></i>Positive Reviews
                    </h5>
                </div>
                <div class="card-body text-center">
                    <h1 class="text-success display-4 mb-2">@Model.PositiveReviewUsers.ToString("N0")</h1>
                    <p class="text-muted mb-0">Users with positive feedback</p>
                    @if (Model.TotalUsers > 0)
                    {
                        <small class="text-muted">
                            (@((Model.PositiveReviewUsers * 100.0 / Model.TotalUsers).ToString("F1"))% of total users)
                        </small>
                    }
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="card border-danger h-100">
                <div class="card-header bg-light">
                    <h5 class="card-title text-danger mb-0">
                        <i class="fas fa-thumbs-down me-2"></i>Negative Reviews
                    </h5>
                </div>
                <div class="card-body text-center">
                    <h1 class="text-danger display-4 mb-2">@Model.NegativeReviewUsers.ToString("N0")</h1>
                    <p class="text-muted mb-0">Users with negative feedback</p>
                    @if (Model.TotalUsers > 0)
                    {
                        <small class="text-muted">
                            (@((Model.NegativeReviewUsers * 100.0 / Model.TotalUsers).ToString("F1"))% of total users)
                        </small>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Additional Metrics -->
    <div class="row g-4">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-chart-pie me-2"></i>User Engagement Summary
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row text-center">
                        <div class="col-md-3">
                            <div class="border-end">
                                <h4 class="text-primary">@((Model.TotalUsers > 0 ? (Model.UsersWithOrders * 100.0 / Model.TotalUsers) : 0).ToString("F1"))%</h4>
                                <p class="text-muted mb-0">Purchase Rate</p>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="border-end">
                                <h4 class="text-success">@((Model.TotalUsers > 0 ? (Model.PositiveReviewUsers * 100.0 / Model.TotalUsers) : 0).ToString("F1"))%</h4>
                                <p class="text-muted mb-0">Satisfaction Rate</p>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="border-end">
                                <h4 class="text-info">@((Model.TotalUsers > 0 ? (Model.NewUsersThisMonth * 100.0 / Model.TotalUsers) : 0).ToString("F1"))%</h4>
                                <p class="text-muted mb-0">Monthly Growth</p>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <h4 class="text-warning">@((Model.PositiveReviewUsers + Model.NegativeReviewUsers > 0 ? (Model.PositiveReviewUsers * 100.0 / (Model.PositiveReviewUsers + Model.NegativeReviewUsers)) : 0).ToString("F1"))%</h4>
                            <p class="text-muted mb-0">Positive Ratio</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    <script>
        // Auto refresh every 5 minutes
        setTimeout(function() {
            location.reload();
        }, 300000); // 5 minutes

        // Initialize tooltips if using Bootstrap
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
        });
    </script>
}