@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<StackBook.Models.User>


@{
    ViewData["Title"] = "User Management";
}

<div class="container mt-4">
    <h1 class="text-primary text-center">User Management</h1>
    <hr />
    <a asp-action="Create" class="btn btn-success mb-3">Add New User</a>

    <table class="table table-striped table-hover">
        <thead class="table-dark">
            <tr>
                <th>#</th>
                <th>Avatar</th>
                <th>Full Name</th>
                <th>Email</th>
                <th>Role</th>
                <th>Status</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Any())
            {
                int index = 0;
                foreach (var user in Model)
                {
                    <tr>
                        <td>@((Model.PageNumber - 1) * Model.PageSize + index + 1)</td>
                        <td>
                            @if (!string.IsNullOrEmpty(user.AvatarUrl))
                            {
                                <img src="@user.AvatarUrl"
                                     alt="Avatar"
                                     class="img-thumbnail rounded-circle"
                                     style="width: 50px; height: 50px; object-fit: cover;" />
                            }
                            else
                            {
                                <span>No Avatar</span>
                            }
                        </td>
                        <td>@user.FullName</td>
                        <td>@user.Email</td>
                        <td style="width: 110px;">
                            @if (user.Role)
                            {
                                <span class="badge bg-primary">
                                    <i class="fa-solid fa-user-shield"></i> Admin
                                </span>
                            }
                            else
                            {
                                <span class="badge bg-secondary">
                                    <i class="fa-solid fa-user"></i> Customer
                                </span>
                            }
                        </td>
                        <td style="width: 110px;">
                            @if (user.LockStatus)
                            {
                                <span class="badge bg-danger">
                                    <i class="fa-solid fa-lock"></i> Locked
                                </span>
                            }
                            else
                            {
                                <span class="badge bg-success">
                                    <i class="fa-solid fa-unlock"></i> Active
                                </span>
                            }
                        </td>
                        <td>
                            <a style="width: 70px;" asp-action="Edit" asp-route-UserId="@user.UserId" class="btn btn-primary btn-sm">
                                <i class="fa-solid fa-pen-to-square"></i> Edit
                            </a>
                            @if (user.LockStatus)
                            {
                                <a style="width: 70px;" asp-action="Unlock" asp-route-id="@user.UserId" class="btn btn-warning btn-sm">
                                    <i class="fa-solid fa-lock-open"></i> Unlock
                                </a>
                            }
                            else
                            {
                                <a style="width: 70px;" asp-action="Lock" asp-route-id="@user.UserId" class="btn btn-danger btn-sm">
                                    <i class="fa-solid fa-lock"></i> Lock
                                </a>
                            }
                        </td>
                    </tr>
                    index++;
                }
            }
            else
            {
                <tr>
                    <td colspan="7" class="text-center">No users found.</td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Pagination -->
    <div class="d-flex justify-content-end mt-4">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page }),
                 new PagedListRenderOptions
        {
            Display = PagedListDisplayMode.IfNeeded,
            UlElementClasses = new[] { "pagination" },
            LiElementClasses = new[] { "page-item" },
            PageClasses = new[] { "page-link" },
            ActiveLiElementClass = "active",
            PageCountAndCurrentLocationFormat = "Page {0} of {1}",
            MaximumPageNumbersToDisplay = 5
        })
    </div>
</div>

<!-- Optional Delete Modal if you re-enable Delete later -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title text-danger" id="deleteModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete the user <strong id="userName"></strong>?</p>
            </div>
            <div class="modal-footer">
                <form id="deleteForm" method="post" asp-action="Delete">
                    <input type="hidden" id="userId" name="UserId" />
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const deleteModal = document.getElementById('deleteModal');
        deleteModal?.addEventListener('show.bs.modal', function (event) {
            const button = event.relatedTarget;
            const userId = button.getAttribute('data-user-id');
            const userName = button.getAttribute('data-user-name');

            const modalTitle = deleteModal.querySelector('#userName');
            const userIdInput = deleteModal.querySelector('#userId');

            modalTitle.textContent = userName;
            userIdInput.value = userId;
        });
    </script>
}
