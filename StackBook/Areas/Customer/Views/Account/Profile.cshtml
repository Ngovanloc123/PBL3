@model StackBook.Models.User;
@{
    ViewData["Title"] = "User Profile";
    ViewData["ActivePage"] = "Profile";
}

@{
    Layout = "_Layout";
}

<style>
     :root {
        --primary-color: #4361ee;
        --secondary-color: #3f37c9;
        --danger-color: #f72585;
        --danger-hover: #b5179e;
        --text-dark: #2b2d42;
        --text-light: #8d99ae;
        --bg-light: #edf2f4;
    }

    .profile-wrapper {
        max-width: 800px;
        margin: 2rem auto;
        padding: 0 1rem;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .profile-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
    }

    .welcome-section {
        background-color: white;
        padding: 1.5rem;
        border-radius: 12px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    }

    .welcome-title {
        font-size: 1.975rem;
        color: var(--text-dark);
        margin-bottom: 0.5rem;
    }

    .welcome-date {
        color: var(--text-light);
        font-size: 1rem;
    }

    .profile-card {
        background-color: white;
        border-radius: 12px;
        padding: 2rem;
        margin-bottom: 1.5rem;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    }

    .profile-card h3 {
        font-size: 1.45rem;
    }

    .profile-info-item {
        margin-bottom: 1.8rem;
    }

    .info-label {
        font-size: 1rem;
        color: var(--text-light);
        margin-bottom: 0.5rem;
        display: block;
    }

    .info-value {
        font-size: 1rem;
        color: var(--text-dark);
        font-weight: 500;
        display: block;
        padding: 0.8rem;
        background-color: var(--bg-light);
        border-radius: 8px;
    }

    .email-section {
        display: flex;
        justify-content: space-between;
        align-items: center;
        @* padding: 0.8rem; *@
        background-color: var(--bg-light);
        border-radius: 8px;
        margin-bottom: 1rem;
    }

    .email-timestamp {
        font-size: 0.8rem;
        color: var(--text-light);
    }

    .add-email-link {
        color: var(--primary-color);
        font-size: 0.9rem;
        text-decoration: none;
        display: inline-block;
        margin-bottom: 1.5rem;
    }

    .edit-button {
        background-color: var(--primary-color);
        color: white;
        border: none;
        padding: 0.8rem 1.8rem;
        border-radius: 8px;
        font-size: 1rem;
        cursor: pointer;
        transition: all 0.3s ease;
        display: block;
        margin: 2rem auto 0;
        width: fit-content;
    }

    .edit-button:hover {
        background-color: var(--secondary-color);
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    /* Form styles - hidden by default */
    .edit-form {
        display: none;
        background-color: var(--bg-light);
        padding: 1.5rem;
        border-radius: 8px;
        margin-top: 1rem;
    }

    .form-group {
        margin-bottom: 1.2rem;
    }

    .form-group label {
        display: block;
        margin-bottom: 0.5rem;
        font-size: 1rem;
        color: var(--text-light);
    }

    .form-group input {
        width: 100%;
        padding: 0.8rem;
        border: 1px solid #ddd;
        border-radius: 8px;
        font-size: 1rem;
    }

    .form-actions {
        display: flex;
        gap: 1rem;
        margin-top: 1.5rem;
    }

    .save-button {
        background-color: var(--primary-color);
        color: white;
        border: none;
        padding: 0.7rem 1.5rem;
        border-radius: 8px;
        font-size: 0.9rem;
        cursor: pointer;
    }

    .cancel-button {
        background-color: white;
        color: var(--text-dark);
        border: 1px solid #ddd;
        padding: 0.7rem 1.5rem;
        border-radius: 8px;
        font-size: 0.9rem;
        cursor: pointer;
    }

    /* Avatar styles */
    .avatar-section {
        display: flex;
        align-items: center;
        margin-bottom: 2rem;
    }

    .avatar-container {
        width: 120px;
        height: 120px;
        border-radius: 50%;
        overflow: hidden;
        margin-right: 1.5rem;
        position: relative;
        border: 3px solid white;
        box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
    }

    .avatar-container:hover {
        transform: scale(1.05);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
    }

    .avatar-container img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .avatar-upload {
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        background: rgba(0, 0, 0, 0.5);
        color: white;
        text-align: center;
        padding: 5px 0;
        font-size: 0.7rem;
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .avatar-container:hover .avatar-upload {
        opacity: 1;
    }

    #avatarForm {
        display: none;
    }
</style>

<div class="container py-4">
    <div class="row">
        <!-- Sidebar Section -->
        @await Html.PartialAsync("_SideBar", Model)
        <div class="profile-wrapper">
            <div class="welcome-section">
                <div class="profile-header">
                    <div>
                        <h1 class="welcome-title">@Model.FullName</h1>
                        <div class="welcome-date">@Model.CreatedUser.ToString("ddd, dd MMMM yyyy")</div>
                    </div>
                    <div class="avatar-section">
                        <form id="avatarForm" method="post" asp-action="UpdateAvatar" asp-controller="Account" enctype="multipart/form-data">
                            <input type="hidden" name="userId" value="@Model.UserId" />
                            <input hidden type="file" id="avatarInput" name="image" accept="image/*" onchange="this.form.submit()" />
                        </form>
                        <label for="avatarInput" class="avatar-container">
                            <img src="@(string.IsNullOrEmpty(Model.AvatarUrl) ? "https://www.gravatar.com/avatar/default?s=200&d=mp" : Model.AvatarUrl)" alt="Profile Avatar">
                            <div class="avatar-upload">Change</div>
                        </label>
                    </div>
                </div>
            </div>

            <div class="profile-card">
                <div class="profile-info-item">
                    <span class="info-label">Full Name</span>
                    <span class="info-value">@Model.FullName</span>
                    <form class="edit-form" method="post" asp-action="UpdateUserName" asp-controller="Account">
                        <input type="hidden" name="userId" value="@Model.UserId" />
                        <div class="form-group">
                            <label for="fullName">Full Name</label>
                            <input type="text" id="fullName" name="username" value="@Model.FullName" required />
                        </div>
                        <div class="form-actions">
                            <button type="submit" class="save-button">Save</button>
                            <button type="button" class="cancel-button">Cancel</button>
                        </div>
                    </form>
                    
                </div>

                <div class="profile-info-item">
                    <span class="info-label">Email</span>
                    <div class="email-section">
                        <span class="info-value">@Model.Email</span>
                        @* <span class="email-timestamp">1 month ago</span> *@
                    </div>
                    <form class="edit-form" method="post" asp-action="UpdateEmail" asp-controller="Account">
                        <input type="hidden" name="userId" value="@Model.UserId" />
                        <div class="form-group">
                            <label for="email">Email</label>
                            <input type="email" id="email" name="email" value="@Model.Email" required />
                        </div>
                        <div class="form-actions">
                            <button type="submit" class="save-button">Save</button>
                            <button type="button" class="cancel-button">Cancel</button>
                        </div>
                    </form> 
                </div>

                <button class="edit-button">Edit Profile</button>
            </div>

            <!-- Password change section -->
            <div class="profile-card">
                <h3>Change Password</h3>
                <form method="post" asp-action="ChangePassword" asp-controller="Account">
                    <input type="hidden" name="userId" value="@Model.UserId" />
                    <div class="form-group">
                        <label for="currentPassword">Current Password</label>
                        <input type="password" id="currentPassword" name="currentPassword" required />
                    </div>
                    <div class="form-group">
                        <label for="newPassword">New Password</label>
                        <input type="password" id="newPassword" name="newPassword" required />
                    </div>
                    <div class="form-group">
                        <label for="confirmPassword">Confirm New Password</label>
                        <input type="password" id="confirmPassword" name="confirmPassword" required />
                    </div>
                    <div class="form-actions">
                        <button type="submit" class="save-button">Change Password</button>
                    </div>
                </form>
            </div>

            <!-- Logout section -->
            <div class="profile-card">
                <h3>Account Actions</h3>
                <form method="get" asp-area="Site" asp-controller="Account" asp-action="SignOut">
                    <button type="submit" class="edit-button" style="background-color: var(--danger-color);">Logout</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const editButton = document.querySelector('.edit-button');
        const editForms = document.querySelectorAll('.edit-form');
        const cancelButtons = document.querySelectorAll('.cancel-button');
        
        editButton.addEventListener('click', function() {
            // Toggle all edit forms
            editForms.forEach(form => {
                form.style.display = form.style.display === 'block' ? 'none' : 'block';
            });
            
            // Toggle button text
            this.textContent = this.textContent === 'Edit Profile' ? 'Cancel Editing' : 'Edit Profile';
        });
        
        cancelButtons.forEach(button => {
            button.addEventListener('click', function() {
                // Hide the parent form
                this.closest('.edit-form').style.display = 'none';
                // Reset the main edit button text if all forms are closed
                if ([...editForms].every(form => form.style.display === 'none')) {
                    editButton.textContent = 'Edit Profile';
                }
            });
        });
    });
</script>