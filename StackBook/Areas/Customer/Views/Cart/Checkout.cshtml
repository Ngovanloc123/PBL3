@model StackBook.ViewModels.CheckoutRequest

@{
    ViewData["Title"] = "Checkout";
    var totalItems = Model.SelectedBooks?.Sum(b => b.Quantity) ?? 0;
    var totalPrice = Model.SelectedBooks?.Sum(b => b.Book.Price * b.Quantity) ?? 0;
    var shippingAddresses = Model.User?.ShippingAddresses?.ToList() ?? new List<StackBook.Models.ShippingAddress>();
    var defaultAddress = Model.shippingAddressDefault;
    var availableDiscounts = Model.discounts ?? new List<StackBook.Models.Discount>();
    var validDiscounts = availableDiscounts.Where(d => DateTime.Now >= d.StartDate && DateTime.Now <= d.EndDate).ToList();
}

<div class="container my-4">
    <h1 class="text-center py-3 border-bottom bg-body-tertiary">Checkout</h1>

    @if (Model.SelectedBooks != null && Model.SelectedBooks.Any())
    {
        <div class="row">
            <!-- Order Summary -->
            <div class="col-lg-6">
                <h3 class="mb-3">Order Summary</h3>
                <div class="table-responsive">
                    <table class="table align-middle text-center">
                        <thead class="table-light">
                            <tr>
                                <th>Book</th>
                                <th>Quantity</th>
                                <th>Price</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var selectedBook in Model.SelectedBooks)
                            {
                                <tr>
                                    <td class="text-start">
                                        <img src="@selectedBook.Book.ImageURL" alt="@selectedBook.Book.BookTitle" style="width: 60px; height: auto;" class="rounded me-2" />
                                        <strong>@selectedBook.Book.BookTitle</strong>
                                    </td>
                                    <td>
                                        <span>@selectedBook.Quantity</span>
                                    </td>
                                    <td>
                                        <strong>
                                            $@(selectedBook.Book.Price * selectedBook.Quantity)
                                        </strong>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Discount Section -->
                @if (validDiscounts.Any())
                {
                    <div class="border-top pt-3 mb-3">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <h5>Discount</h5>
                            <button type="button" class="btn btn-outline-success btn-sm" data-bs-toggle="modal" data-bs-target="#discountModal">
                                <i class="bi bi-tag"></i> Apply Discount
                            </button>
                        </div>
                        <div id="selectedDiscount" class="alert alert-light d-none">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <strong id="selectedDiscountName">No discount selected</strong>
                                    <div class="text-muted small" id="selectedDiscountDesc"></div>
                                </div>
                                <div class="text-end">
                                    <span class="badge bg-success" id="selectedDiscountAmount">$0 OFF</span>
                                    <button type="button" class="btn btn-sm btn-outline-danger ms-2" onclick="removeDiscount()">
                                        x
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                }

                <div class="border-top pt-3">
                    <div class="d-flex justify-content-between mb-2">
                        <span>Subtotal (<span id="total-items">@totalItems</span> Books):</span>
                        <span id="subtotal-price">$@totalPrice</span>
                    </div>
                    <div class="d-flex justify-content-between mb-2" id="discount-row" style="display: none;">
                        <span class="text-success">Discount:</span>
                        <span class="text-success" id="discount-amount">-$0</span>
                    </div>
                    <div class="d-flex justify-content-between">
                        <h5>Total:</h5>
                        <span class="text-danger fs-4" id="total-price">$@totalPrice</span>
                    </div>
                </div>
            </div>

            <!-- Billing Information -->
            <div class="col-lg-6">
                <h3 class="mb-3">Shipping Information</h3>
                <div class="mb-4">
                    <h5>Shipping Address</h5>
                    @if (defaultAddress != null)
                    {
                        <div id="current-address" class="border p-3 rounded">
                            <p><strong>@Model.User?.FullName</strong></p>
                            <p>@defaultAddress.Address, @defaultAddress.Ward, @defaultAddress.City, @defaultAddress.Country</p>
                            <p>Phone: @defaultAddress.Phone</p>
                            <button class="btn btn-link p-0" type="button" data-bs-toggle="modal" data-bs-target="#addressModal">
                                Change Address
                            </button>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-warning">No shipping address found. Please add one.</div>
                        <button class="btn btn-outline-primary mt-2" data-bs-toggle="modal" data-bs-target="#newAddressModal">
                            <i class="bi bi-plus-circle"></i> Add New Address
                        </button>
                    }
                </div>

                <!-- Payment Method Selection -->
                <div class="mb-4">
                    <label class="form-label">Payment Method</label>
                    <div class="payment-methods">
                        <!-- Cash on Delivery Option -->
                        <div class="form-check border rounded p-3 mb-3">
                            <input class="form-check-input" type="radio" name="paymentMethod" id="cashOnDelivery" value="CashOnDelivery" checked>
                            <label class="form-check-label w-100" for="cashOnDelivery">
                                <div class="d-flex align-items-center">
                                    <i class="bi bi-cash-coin fs-4 me-3 text-success"></i>
                                    <div>
                                        <strong>Cash on Delivery</strong>
                                        <div class="text-muted small">Pay when you receive your order</div>
                                    </div>
                                </div>
                            </label>
                        </div>

                        <!-- Credit Card / VNPay Option -->
                        <div class="form-check border rounded p-3">
                            <input class="form-check-input" type="radio" name="paymentMethod" id="creditCard" value="CreditCard">
                            <label class="form-check-label w-100" for="creditCard">
                                <div class="d-flex align-items-center">
                                    <i class="bi bi-credit-card fs-4 me-3 text-primary"></i>
                                    <div>
                                        <strong>Online Payment</strong>
                                        <div class="text-muted small">Pay securely with VNPay</div>
                                    </div>
                                </div>
                            </label>
                        </div>

                        <div id="vnpaySection" class="mt-4" style="display: none;">
                            <div class="card shadow-sm border-0">
                                <div class="card-body text-start">
                                    <form method="post" asp-controller="Payment" asp-action="CreateOrder">
                                        <!-- hidden inputs để truyền PaymentInformationModel -->
                                        <input type="hidden" name="amount" value="100" />
                                        <input type="hidden" name="orderInfo" value="Thanh toan don hang StackBook" />
                                        @* <input type="hidden" name="OrderType" value="other" /> <!-- THÊM --> *@
                                        @* <input type="hidden" name="Name" value="Nguyen Van A" /> *@

                                        <button type="submit" class="btn btn-light border rounded-2 px-4 py-2">
                                            <img src="https://vnpay.vn/s1/statics.vnpay.vn/2023/9/06ncktiwd6dc1694418196384.png"
                                                 alt="VNPay Logo"
                                                 style="height: 40px;">
                                        </button>
                                    </form>

                                </div>
                            </div>
                        </div>

                    </div>
                </div>

                <!-- Place Order Forms -->
                <!-- Cash on Delivery Form -->
                <form id="codForm" method="post" asp-action="PlaceOrder" asp-controller="Order">
                    <input type="hidden" name="PaymentMethod" value="COD" />
                    <!-- Hidden inputs for selected books -->
                    @for (int i = 0; i < Model.SelectedBooks.Count; i++)
                    {
                        <input type="hidden" name="SelectedBooks[@i].Book.BookId" value="@Model.SelectedBooks[i].Book.BookId" />
                        <input type="hidden" name="SelectedBooks[@i].Quantity" value="@Model.SelectedBooks[i].Quantity" />
                    }
                    <input type="hidden" name="User.UserId" value="@Model.User?.UserId" />
                    <input type="hidden" name="shippingAddressDefault.ShippingAddressId" value="@defaultAddress?.ShippingAddressId" />
                    <input type="hidden" name="DiscountId" id="codDiscountId" value="" />
                    <button type="submit" class="btn btn-success btn-lg w-100">Place Order</button>
                </form>

                

            </div>
        </div>
    }
    else
    {
        <div class="alert alert-warning text-center">
            Your cart is empty. <a href="/" class="alert-link">Continue shopping</a>.
        </div>
    }
</div>

<!-- Discount Modal -->
<div class="modal fade" id="discountModal" tabindex="-1" aria-labelledby="discountModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="discountModalLabel">
                    <i class="bi bi-tag text-success me-2"></i>Available Discounts
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @if (validDiscounts.Any())
                {
                    <div class="list-group" style="max-height: 400px; overflow-y: auto;">
                        <div class="list-group-item border-0 py-2">
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="modalDiscountSelection" id="modalNoDiscount" value="" checked>
                                <label class="form-check-label fw-bold" for="modalNoDiscount">
                                    No discount
                                </label>
                            </div>
                        </div>
                        @foreach (var discount in validDiscounts)
                        {
                            <div class="list-group-item border rounded mb-2 discount-item" style="cursor: pointer;">
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="modalDiscountSelection"
                                           id="modalDiscount_@discount.DiscountId" value="@discount.DiscountId"
                                           data-discount-name="@discount.DiscountName"
                                           data-discount-desc="@discount.Description"
                                           data-discount-price="@discount.Price"
                                           data-start-date="@discount.StartDate.ToString("yyyy-MM-dd")"
                                           data-end-date="@discount.EndDate.ToString("yyyy-MM-dd")">
                                    <label class="form-check-label w-100" for="modalDiscount_@discount.DiscountId">
                                        <div class="d-flex justify-content-between align-items-start">
                                            <div class="flex-grow-1">
                                                <div class="d-flex align-items-center mb-2">
                                                    <i class="bi bi-tag-fill text-success me-2"></i>
                                                    <strong>@discount.DiscountName</strong>
                                                </div>
                                                @if (!string.IsNullOrEmpty(discount.Description))
                                                {
                                                    <p class="text-muted mb-2 small">@discount.Description</p>
                                                }
                                                <div class="d-flex align-items-center text-muted small">
                                                    <i class="bi bi-calendar-event me-1"></i>
                                                    <span>Valid: @discount.StartDate.ToString("MM/dd/yyyy") - @discount.EndDate.ToString("MM/dd/yyyy")</span>
                                                </div>
                                            </div>
                                            <div class="text-end ms-3">
                                                <span class="badge bg-success fs-6">$@discount.Price OFF</span>
                                            </div>
                                        </div>
                                    </label>
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="text-center py-4">
                        <i class="bi bi-tag fs-1 text-muted"></i>
                        <p class="text-muted mt-2">No discounts available at the moment.</p>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-success" onclick="applySelectedDiscount()">Apply Discount</button>
            </div>
        </div>
    </div>
</div>

<!-- Address Modal -->
<div class="modal fade" id="addressModal" tabindex="-1" aria-labelledby="addressModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <form method="post" asp-action="Select" asp-controller="ShippingAddress" asp-area="Customer" id="addressSelectForm">
                <div class="modal-header">
                    <h5 class="modal-title" id="addressModalLabel">Select Shipping Address</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    @if (shippingAddresses.Any())
                    {
                        <div class="list-group" style="max-height: 300px; overflow-y: auto;">
                            @foreach (var addr in shippingAddresses)
                            {
                                <div class="list-group-item d-flex justify-content-between align-items-center">
                                    <div class="form-check flex-grow-1">
                                        <input class="form-check-input" type="radio" name="ShippingAddressId" id="address_@addr.ShippingAddressId" value="@addr.ShippingAddressId" @(addr.ShippingAddressId == defaultAddress?.ShippingAddressId ? "checked" : "")>
                                        <label class="form-check-label" for="address_@addr.ShippingAddressId">
                                            <strong>@Model.User?.FullName</strong> <br>
                                            @addr.Address, @addr.Ward, @addr.City, @addr.Country <br>
                                            <span class="text-muted">@addr.Phone</span>
                                        </label>
                                    </div>
                                    <button type="button" class="btn btn-outline-danger btn-sm"
                                            data-bs-toggle="modal" data-bs-target="#deleteAddressModal_@addr.ShippingAddressId">
                                        <i class="bi bi-trash"></i> Delete
                                    </button>
                                </div>
                            }
                        </div>
                    }
                    <button type="button" class="btn btn-outline-primary w-100 mt-3" data-bs-toggle="modal" data-bs-target="#newAddressModal">
                        <i class="bi bi-plus-circle"></i> Add New Address
                    </button>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Confirm</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Delete Address Confirmation Modals -->
@foreach (var addr in shippingAddresses)
{
    <div class="modal fade" id="deleteAddressModal_@addr.ShippingAddressId" tabindex="-1" aria-labelledby="deleteAddressModalLabel_@addr.ShippingAddressId" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <form method="post" asp-action="Delete" asp-controller="ShippingAddress" asp-area="Customer">
                    <div class="modal-header">
                        <h5 class="modal-title" id="deleteAddressModalLabel_@addr.ShippingAddressId">Confirm Deletion</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <p>Are you sure you want to delete this shipping address?</p>
                        <p class="text-muted small">
                            <strong>@Model.User?.FullName</strong><br>
                            @addr.Address, @addr.Ward, @addr.City, @addr.Country<br>
                            @addr.Phone
                        </p>
                        <input type="hidden" name="ShippingAddressId" value="@addr.ShippingAddressId" />
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-danger">Delete</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
}

<!-- New Address Modal -->
<div class="modal fade" id="newAddressModal" tabindex="-1" aria-labelledby="newAddressModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="newAddressModalLabel">Add New Address</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @await Html.PartialAsync("_AddShippingAddressModal", new StackBook.Models.ShippingAddress { UserId = Model.User.UserId })
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <style>
        .bank-logo {
            width: 30px;
            height: 30px;
            object-fit: contain;
            margin-bottom: 5px;
        }

        .bank-btn {
            padding: 10px 5px;
            text-align: center;
        }

            .bank-btn.selected {
                border-color: #0d6efd;
                background-color: #e7f3ff;
            }

        .payment-methods .form-check {
            cursor: pointer;
        }

            .payment-methods .form-check:hover {
                background-color: #f8f9fa;
            }

        .discount-item {
            cursor: pointer;
            transition: all 0.2s ease;
        }

            .discount-item:hover {
                background-color: #f8f9fa;
                transform: translateY(-2px);
                box-shadow: 0 4px 8px rgba(0,0,0,0.1);
            }

            .discount-item input[type="radio"]:checked + label {
                background-color: #f0f8f4;
            }

            .discount-item.selected {
                border-color: #198754 !important;
                background-color: #f0f8f4;
            }
    </style>
    <script>
        const originalTotal = @totalPrice;
        let currentDiscountId = '';
        let currentDiscountAmount = 0;
        let selectedDiscountData = null;

        // Initialize on page load
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize discount values
            document.getElementById('codDiscountId').value = '';
            document.getElementById('vnpayDiscountId').value = '';
        });

        // Payment method selection
        document.querySelectorAll('input[name="paymentMethod"]').forEach(radio => {
            radio.addEventListener('change', function() {
                const vnpaySection = document.getElementById('vnpaySection');
                const codForm = document.getElementById('codForm');
                const vnpayForm = document.getElementById('vnpayForm');

                if (this.value === 'CreditCard') {
                    vnpaySection.style.display = 'block';
                    codForm.style.display = 'none';
                    vnpayForm.style.display = 'block';
                } else {
                    vnpaySection.style.display = 'none';
                    codForm.style.display = 'block';
                    vnpayForm.style.display = 'none';
                }
            });
        });

        // Bank selection
        document.querySelectorAll('.bank-btn').forEach(btn => {
            btn.addEventListener('click', function() {
                // Remove selected class from all buttons
                document.querySelectorAll('.bank-btn').forEach(b => b.classList.remove('selected'));

                // Add selected class to clicked button
                this.classList.add('selected');

                // Set bank code
                const bankCode = this.getAttribute('data-bank');
                document.getElementById('selectedBankCode').value = bankCode;

                // Enable submit button
                document.getElementById('vnpaySubmitBtn').disabled = false;
            });
        });

        // Modal discount selection
        document.querySelectorAll('input[name="modalDiscountSelection"]').forEach(radio => {
            radio.addEventListener('change', function() {
                // Remove selected class from all discount items
                document.querySelectorAll('.discount-item').forEach(item => {
                    item.classList.remove('selected');
                });

                // Add selected class to current item (if not "no discount")
                if (this.value !== '') {
                    this.closest('.discount-item').classList.add('selected');
                }
            });
        });

        // Apply selected discount function
        function applySelectedDiscount() {
            const selectedRadio = document.querySelector('input[name="modalDiscountSelection"]:checked');

            if (!selectedRadio) {
                return;
            }

            const discountRow = document.getElementById('discount-row');
            const discountAmount = document.getElementById('discount-amount');
            const totalPriceElement = document.getElementById('total-price');
            const selectedDiscountDiv = document.getElementById('selectedDiscount');

            if (selectedRadio.value === '') {
                // No discount selected
                removeDiscount();
            } else {
                // Discount selected
                currentDiscountId = selectedRadio.value;
                const discountPrice = parseFloat(selectedRadio.getAttribute('data-discount-price'));
                const discountName = selectedRadio.getAttribute('data-discount-name');
                const discountDesc = selectedRadio.getAttribute('data-discount-desc');

                // Store selected discount data
                selectedDiscountData = {
                    id: currentDiscountId,
                    name: discountName,
                    description: discountDesc,
                    price: discountPrice
                };

                // Calculate discount amount (fixed amount discount)
                currentDiscountAmount = Math.min(discountPrice, originalTotal);

                // Update display
                discountRow.style.display = 'flex';
                discountAmount.textContent = '-$' + currentDiscountAmount.toFixed(2);

                const finalTotal = originalTotal - currentDiscountAmount;
                totalPriceElement.textContent = '$' + finalTotal.toFixed(2);

                // Show selected discount info
                selectedDiscountDiv.classList.remove('d-none');
                document.getElementById('selectedDiscountName').textContent = discountName;
                document.getElementById('selectedDiscountDesc').textContent = discountDesc || '';
                document.getElementById('selectedDiscountAmount').textContent = '$' + discountPrice + ' OFF';

                // Update hidden inputs in both forms
                document.getElementById('codDiscountId').value = currentDiscountId;
                document.getElementById('vnpayDiscountId').value = currentDiscountId;
            }

            // Close modal
            const modal = bootstrap.Modal.getInstance(document.getElementById('discountModal'));
            modal.hide();
        }

        // Remove discount function
        function removeDiscount() {
            currentDiscountId = '';
            currentDiscountAmount = 0;
            selectedDiscountData = null;

            const discountRow = document.getElementById('discount-row');
            const totalPriceElement = document.getElementById('total-price');
            const selectedDiscountDiv = document.getElementById('selectedDiscount');

            // Hide discount row and selected discount info
            discountRow.style.display = 'none';
            selectedDiscountDiv.classList.add('d-none');

            // Reset total price
            totalPriceElement.textContent = '$' + originalTotal.toFixed(2);

            // Clear hidden inputs
            document.getElementById('codDiscountId').value = '';
            document.getElementById('vnpayDiscountId').value = '';

            // Reset modal selection
            document.getElementById('modalNoDiscount').checked = true;
            document.querySelectorAll('.discount-item').forEach(item => {
                item.classList.remove('selected');
            });
        }

        // Address selection function
        function selectAddress() {
            var selected = document.querySelector('input[name="ShippingAddressId"]:checked');
            if (selected) {
                // Update both forms' shipping address inputs
                document.querySelector('#codForm input[name="shippingAddressDefault.ShippingAddressId"]').value = selected.value;
                document.querySelector('#vnpayForm input[name="shippingAddressDefault.ShippingAddressId"]').value = selected.value;

                // Close modal
                var modal = bootstrap.Modal.getInstance(document.getElementById('addressModal'));
                modal.hide();
            }
        }

        // Handle discount item clicks to select radio button
        document.querySelectorAll('.discount-item').forEach(item => {
            item.addEventListener('click', function(e) {
                if (e.target.type !== 'radio') {
                    const radio = this.querySelector('input[type="radio"]');
                    if (radio) {
                        radio.checked = true;
                        radio.dispatchEvent(new Event('change'));
                    }
                }
            });
        });

        // Preserve selected discount when modal reopens
        document.getElementById('discountModal').addEventListener('show.bs.modal', function() {
            if (currentDiscountId) {
                const targetRadio = document.getElementById('modalDiscount_' + currentDiscountId);
                if (targetRadio) {
                    targetRadio.checked = true;
                    targetRadio.closest('.discount-item').classList.add('selected');
                }
            } else {
                document.getElementById('modalNoDiscount').checked = true;
                document.querySelectorAll('.discount-item').forEach(item => {
                    item.classList.remove('selected');
                });
            }
        });

        // Form validation before submit
        document.getElementById('codForm').addEventListener('submit', function(e) {
            const addressId = document.querySelector('input[name="shippingAddressDefault.ShippingAddressId"]').value;
            if (!addressId) {
                e.preventDefault();
                alert('Please select a shipping address.');
                return false;
            }
        });

        document.getElementById('vnpayForm').addEventListener('submit', function(e) {
            const addressId = document.querySelector('input[name="shippingAddressDefault.ShippingAddressId"]').value;
            const bankCode = document.getElementById('selectedBankCode').value;

            if (!addressId) {
                e.preventDefault();
                alert('Please select a shipping address.');
                return false;
            }

            if (!bankCode) {
                e.preventDefault();
                alert('Please select a bank for payment.');
                return false;
            }
        });
    </script>
}