// // <auto-generated />
// using System;
// using Microsoft.EntityFrameworkCore;
// using Microsoft.EntityFrameworkCore.Infrastructure;
// using Microsoft.EntityFrameworkCore.Metadata;
// using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
// using StackBook.Data;

// #nullable disable

// namespace StackBook.Migrations
// {
//     [DbContext(typeof(ApplicationDbContext))]
//     partial class ApplicationDbContextModelSnapshot : ModelSnapshot
//     {
//         protected override void BuildModel(ModelBuilder modelBuilder)
//         {
// #pragma warning disable 612, 618
//             modelBuilder
//                 .HasAnnotation("ProductVersion", "9.0.4")
//                 .HasAnnotation("Relational:MaxIdentifierLength", 128);

//             SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

//             modelBuilder.Entity("AuthorBook", b =>
//                 {
//                     b.Property<Guid>("AuthorsAuthorId")
//                         .HasColumnType("uniqueidentifier");

//                     b.Property<Guid>("BooksBookId")
//                         .HasColumnType("uniqueidentifier");

//                     b.HasKey("AuthorsAuthorId", "BooksBookId");

//                     b.HasIndex("BooksBookId");

//                     b.ToTable("AuthorBook");
//                 });

//             modelBuilder.Entity("BookCategory", b =>
//                 {
//                     b.Property<Guid>("BooksBookId")
//                         .HasColumnType("uniqueidentifier");

//                     b.Property<Guid>("CategoriesCategoryId")
//                         .HasColumnType("uniqueidentifier");

//                     b.HasKey("BooksBookId", "CategoriesCategoryId");

//                     b.HasIndex("CategoriesCategoryId");

//                     b.ToTable("BookCategory");
//                 });

//             modelBuilder.Entity("StackBook.Models.Author", b =>
//                 {
//                     b.Property<Guid>("AuthorId")
//                         .ValueGeneratedOnAdd()
//                         .HasColumnType("uniqueidentifier");

//                     b.Property<string>("AuthorName")
//                         .IsRequired()
//                         .HasMaxLength(100)
//                         .HasColumnType("nvarchar(100)");

//                     b.HasKey("AuthorId");

//                     b.ToTable("Authors");
//                 });

//             modelBuilder.Entity("StackBook.Models.Book", b =>
//                 {
//                     b.Property<Guid>("BookId")
//                         .ValueGeneratedOnAdd()
//                         .HasColumnType("uniqueidentifier");

//                     b.Property<string>("BookTitle")
//                         .IsRequired()
//                         .HasMaxLength(255)
//                         .HasColumnType("nvarchar(255)");

//                     b.Property<DateTime>("CreatedBook")
//                         .HasColumnType("datetime2");

//                     b.Property<string>("Description")
//                         .HasColumnType("nvarchar(max)");

//                     b.Property<string>("ImageURL")
//                         .IsRequired()
//                         .HasColumnType("nvarchar(max)");

//                     b.Property<double>("Price")
//                         .HasColumnType("float");

//                     b.Property<int>("Stock")
//                         .HasColumnType("int");

//                     b.HasKey("BookId");

//                     b.ToTable("Books");
//                 });

//             modelBuilder.Entity("StackBook.Models.Cart", b =>
//                 {
//                     b.Property<Guid>("CartId")
//                         .ValueGeneratedOnAdd()
//                         .HasColumnType("uniqueidentifier");

//                     b.Property<Guid>("UserId")
//                         .HasColumnType("uniqueidentifier");

//                     b.HasKey("CartId");

//                     b.HasIndex("UserId");

//                     b.ToTable("Carts");
//                 });

//             modelBuilder.Entity("StackBook.Models.CartDetail", b =>
//                 {
//                     b.Property<Guid>("CartId")
//                         .HasColumnType("uniqueidentifier");

//                     b.Property<Guid>("BookId")
//                         .HasColumnType("uniqueidentifier");

//                     b.Property<DateTime>("CreatedCart")
//                         .HasColumnType("datetime2");

//                     b.Property<int>("Quantity")
//                         .HasColumnType("int");

//                     b.HasKey("CartId", "BookId");

//                     b.HasIndex("BookId");

//                     b.ToTable("CartDetails");
//                 });

//             modelBuilder.Entity("StackBook.Models.Category", b =>
//                 {
//                     b.Property<Guid>("CategoryId")
//                         .ValueGeneratedOnAdd()
//                         .HasColumnType("uniqueidentifier");

//                     b.Property<string>("CategoryName")
//                         .IsRequired()
//                         .HasMaxLength(100)
//                         .HasColumnType("nvarchar(100)");

//                     b.Property<int>("DisplayOrder")
//                         .HasColumnType("int");

//                     b.HasKey("CategoryId");

//                     b.ToTable("Categories");
//                 });

//             modelBuilder.Entity("StackBook.Models.Discount", b =>
//                 {
//                     b.Property<Guid>("DiscountId")
//                         .ValueGeneratedOnAdd()
//                         .HasColumnType("uniqueidentifier");

//                     b.Property<DateTime>("CreatedDiscount")
//                         .HasColumnType("datetime2");

//                     b.Property<string>("Description")
//                         .HasColumnType("nvarchar(max)");

//                     b.Property<string>("DiscountCode")
//                         .IsRequired()
//                         .HasMaxLength(100)
//                         .HasColumnType("nvarchar(100)");

//                     b.Property<string>("DiscountName")
//                         .IsRequired()
//                         .HasMaxLength(100)
//                         .HasColumnType("nvarchar(100)");

//                     b.Property<DateTime>("EndDate")
//                         .HasColumnType("datetime2");

//                     b.Property<double>("Price")
//                         .HasColumnType("float");

//                     b.Property<DateTime>("StartDate")
//                         .HasColumnType("datetime2");

//                     b.HasKey("DiscountId");

//                     b.ToTable("Discounts");
//                 });

//             modelBuilder.Entity("StackBook.Models.Notification", b =>
//                 {
//                     b.Property<Guid>("NotificationId")
//                         .ValueGeneratedOnAdd()
//                         .HasColumnType("uniqueidentifier");

//                     b.Property<DateTime>("CreatedAt")
//                         .HasColumnType("datetime2");

//                     b.Property<string>("Message")
//                         .IsRequired()
//                         .HasColumnType("nvarchar(max)");

//                     b.Property<bool>("Status")
//                         .HasColumnType("bit");

//                     b.Property<Guid>("UserId")
//                         .HasColumnType("uniqueidentifier");

//                     b.HasKey("NotificationId");

//                     b.HasIndex("UserId");

//                     b.ToTable("Notifications");
//                 });

//             modelBuilder.Entity("StackBook.Models.Order", b =>
//                 {
//                     b.Property<Guid>("OrderId")
//                         .ValueGeneratedOnAdd()
//                         .HasColumnType("uniqueidentifier");

//                     b.Property<Guid>("DiscountId")
//                         .HasColumnType("uniqueidentifier");

//                     b.Property<Guid>("ShippingAddressId")
//                         .HasColumnType("uniqueidentifier");

//                     b.Property<int>("Status")
//                         .HasColumnType("int");

//                     b.Property<double>("TotalPrice")
//                         .HasColumnType("float");

//                     b.Property<Guid>("UserId")
//                         .HasColumnType("uniqueidentifier");

//                     b.HasKey("OrderId");

//                     b.HasIndex("DiscountId")
//                         .IsUnique();

//                     b.HasIndex("ShippingAddressId");

//                     b.HasIndex("UserId");

//                     b.ToTable("Orders");
//                 });

//             modelBuilder.Entity("StackBook.Models.OrderDetail", b =>
//                 {
//                     b.Property<Guid>("OrderDetailId")
//                         .ValueGeneratedOnAdd()
//                         .HasColumnType("uniqueidentifier");

//                     b.Property<Guid>("BookId")
//                         .HasColumnType("uniqueidentifier");

//                     b.Property<Guid>("OrderId")
//                         .HasColumnType("uniqueidentifier");

//                     b.Property<int>("Quantity")
//                         .HasColumnType("int");

//                     b.HasKey("OrderDetailId");

//                     b.HasIndex("BookId");

//                     b.HasIndex("OrderId");

//                     b.ToTable("OrderDetails");
//                 });

//             modelBuilder.Entity("StackBook.Models.OrderHistory", b =>
//                 {
//                     b.Property<Guid>("OrderHistoryId")
//                         .ValueGeneratedOnAdd()
//                         .HasColumnType("uniqueidentifier");

//                     b.Property<Guid>("OrderId")
//                         .HasColumnType("uniqueidentifier");

//                     b.Property<int>("Status")
//                         .HasColumnType("int");

//                     b.Property<DateTime>("createdStatus")
//                         .HasColumnType("datetime2");

//                     b.HasKey("OrderHistoryId");

//                     b.HasIndex("OrderId");

//                     b.ToTable("OrderHistories");
//                 });

//             modelBuilder.Entity("StackBook.Models.Payment", b =>
//                 {
//                     b.Property<Guid>("PaymentId")
//                         .ValueGeneratedOnAdd()
//                         .HasColumnType("uniqueidentifier");

//                     b.Property<DateTime>("CreatedPayment")
//                         .HasColumnType("datetime2");

//                     b.Property<Guid>("OrderId")
//                         .HasColumnType("uniqueidentifier");

//                     b.Property<string>("PaymentMethod")
//                         .IsRequired()
//                         .HasMaxLength(100)
//                         .HasColumnType("nvarchar(100)");

//                     b.Property<string>("PaymentStatus")
//                         .IsRequired()
//                         .HasMaxLength(100)
//                         .HasColumnType("nvarchar(100)");

//                     b.HasKey("PaymentId");

//                     b.HasIndex("OrderId");

//                     b.ToTable("Payments");
//                 });

//             modelBuilder.Entity("StackBook.Models.ReturnOrder", b =>
//                 {
//                     b.Property<Guid>("ReturnOrderId")
//                         .ValueGeneratedOnAdd()
//                         .HasColumnType("uniqueidentifier");

//                     b.Property<DateTime>("CreatedReturn")
//                         .HasColumnType("datetime2");

//                     b.Property<Guid>("OrderId")
//                         .HasColumnType("uniqueidentifier");

//                     b.Property<string>("Reason")
//                         .IsRequired()
//                         .HasColumnType("nvarchar(max)");

//                     b.Property<Guid>("ShippingAddressId")
//                         .HasColumnType("uniqueidentifier");

//                     b.Property<int>("Status")
//                         .HasColumnType("int");

//                     b.HasKey("ReturnOrderId");

//                     b.HasIndex("OrderId")
//                         .IsUnique();

//                     b.HasIndex("ShippingAddressId");

//                     b.ToTable("ReturnOrders");
//                 });

//             modelBuilder.Entity("StackBook.Models.Review", b =>
//                 {
//                     b.Property<Guid>("ReviewId")
//                         .ValueGeneratedOnAdd()
//                         .HasColumnType("uniqueidentifier");

//                     b.Property<Guid>("BookId")
//                         .HasColumnType("uniqueidentifier");

//                     b.Property<string>("Comment")
//                         .HasColumnType("nvarchar(max)");

//                     b.Property<Guid?>("OrderId")
//                         .HasColumnType("uniqueidentifier");

//                     b.Property<int>("Rating")
//                         .HasColumnType("int");

//                     b.Property<Guid>("UserId")
//                         .HasColumnType("uniqueidentifier");

//                     b.HasKey("ReviewId");

//                     b.HasIndex("BookId");

//                     b.HasIndex("UserId");

//                     b.ToTable("Reviews");
//                 });

//             modelBuilder.Entity("StackBook.Models.ShippingAddress", b =>
//                 {
//                     b.Property<Guid>("ShippingAddressId")
//                         .ValueGeneratedOnAdd()
//                         .HasColumnType("uniqueidentifier");

//                     b.Property<string>("Address")
//                         .IsRequired()
//                         .HasMaxLength(255)
//                         .HasColumnType("nvarchar(255)");

//                     b.Property<string>("City")
//                         .IsRequired()
//                         .HasMaxLength(100)
//                         .HasColumnType("nvarchar(100)");

//                     b.Property<string>("Country")
//                         .IsRequired()
//                         .HasMaxLength(100)
//                         .HasColumnType("nvarchar(100)");

//                     b.Property<string>("Phone")
//                         .IsRequired()
//                         .HasMaxLength(20)
//                         .HasColumnType("nvarchar(20)");

//                     b.Property<Guid>("UserId")
//                         .HasColumnType("uniqueidentifier");

//                     b.Property<string>("Ward")
//                         .IsRequired()
//                         .HasMaxLength(100)
//                         .HasColumnType("nvarchar(100)");

//                     b.HasKey("ShippingAddressId");

//                     b.HasIndex("UserId");

//                     b.ToTable("ShippingAddresses");
//                 });

//             modelBuilder.Entity("StackBook.Models.User", b =>
//                 {
//                     b.Property<Guid>("UserId")
//                         .ValueGeneratedOnAdd()
//                         .HasColumnType("uniqueidentifier");

//                     b.Property<int>("AmountOfTime")
//                         .HasColumnType("int");

//                     b.Property<string>("AvatarUrl")
//                         .HasColumnType("nvarchar(max)");

//                     b.Property<DateTime>("CreatedUser")
//                         .HasColumnType("datetime2");

//                     b.Property<DateTime?>("DateLock")
//                         .HasColumnType("datetime2");

//                     b.Property<string>("Email")
//                         .IsRequired()
//                         .HasMaxLength(100)
//                         .HasColumnType("nvarchar(100)");

//                     b.Property<DateTime?>("EmailVerifiedAt")
//                         .HasColumnType("datetime2");

//                     b.Property<string>("FullName")
//                         .IsRequired()
//                         .HasMaxLength(100)
//                         .HasColumnType("nvarchar(100)");

//                     b.Property<string>("GoogleId")
//                         .HasColumnType("nvarchar(max)");

//                     b.Property<bool>("IsEmailVerified")
//                         .HasColumnType("bit");

//                     b.Property<bool>("LockStatus")
//                         .HasColumnType("bit");

//                     b.Property<string>("Password")
//                         .HasColumnType("nvarchar(max)");

//                     b.Property<string>("RefreshToken")
//                         .HasColumnType("nvarchar(max)");

//                     b.Property<DateTime?>("RefreshTokenExpiry")
//                         .HasColumnType("datetime2");

//                     b.Property<string>("ResetPasswordToken")
//                         .HasColumnType("nvarchar(max)");

//                     b.Property<DateTime?>("ResetTokenExpiry")
//                         .HasColumnType("datetime2");

//                     b.Property<bool>("Role")
//                         .HasColumnType("bit");

//                     b.Property<string>("VerificationToken")
//                         .HasMaxLength(512)
//                         .HasColumnType("nvarchar(512)");

//                     b.HasKey("UserId");

//                     b.ToTable("Users");
//                 });

//             modelBuilder.Entity("AuthorBook", b =>
//                 {
//                     b.HasOne("StackBook.Models.Author", null)
//                         .WithMany()
//                         .HasForeignKey("AuthorsAuthorId")
//                         .OnDelete(DeleteBehavior.Cascade)
//                         .IsRequired();

//                     b.HasOne("StackBook.Models.Book", null)
//                         .WithMany()
//                         .HasForeignKey("BooksBookId")
//                         .OnDelete(DeleteBehavior.Cascade)
//                         .IsRequired();
//                 });

//             modelBuilder.Entity("BookCategory", b =>
//                 {
//                     b.HasOne("StackBook.Models.Book", null)
//                         .WithMany()
//                         .HasForeignKey("BooksBookId")
//                         .OnDelete(DeleteBehavior.Cascade)
//                         .IsRequired();

//                     b.HasOne("StackBook.Models.Category", null)
//                         .WithMany()
//                         .HasForeignKey("CategoriesCategoryId")
//                         .OnDelete(DeleteBehavior.Cascade)
//                         .IsRequired();
//                 });

//             modelBuilder.Entity("StackBook.Models.Cart", b =>
//                 {
//                     b.HasOne("StackBook.Models.User", "User")
//                         .WithMany("Carts")
//                         .HasForeignKey("UserId")
//                         .OnDelete(DeleteBehavior.Cascade)
//                         .IsRequired();

//                     b.Navigation("User");
//                 });

//             modelBuilder.Entity("StackBook.Models.CartDetail", b =>
//                 {
//                     b.HasOne("StackBook.Models.Book", "Book")
//                         .WithMany("CartDetails")
//                         .HasForeignKey("BookId")
//                         .OnDelete(DeleteBehavior.Cascade)
//                         .IsRequired();

//                     b.HasOne("StackBook.Models.Cart", "Cart")
//                         .WithMany("CartDetails")
//                         .HasForeignKey("CartId")
//                         .OnDelete(DeleteBehavior.Cascade)
//                         .IsRequired();

//                     b.Navigation("Book");

//                     b.Navigation("Cart");
//                 });

//             modelBuilder.Entity("StackBook.Models.Notification", b =>
//                 {
//                     b.HasOne("StackBook.Models.User", "User")
//                         .WithMany()
//                         .HasForeignKey("UserId")
//                         .OnDelete(DeleteBehavior.Cascade)
//                         .IsRequired();

//                     b.Navigation("User");
//                 });

//             modelBuilder.Entity("StackBook.Models.Order", b =>
//                 {
//                     b.HasOne("StackBook.Models.Discount", "Discount")
//                         .WithOne("Order")
//                         .HasForeignKey("StackBook.Models.Order", "DiscountId")
//                         .OnDelete(DeleteBehavior.Cascade)
//                         .IsRequired();

//                     b.HasOne("StackBook.Models.ShippingAddress", "ShippingAddress")
//                         .WithMany("Orders")
//                         .HasForeignKey("ShippingAddressId")
//                         .OnDelete(DeleteBehavior.Restrict)
//                         .IsRequired();

//                     b.HasOne("StackBook.Models.User", "User")
//                         .WithMany("Orders")
//                         .HasForeignKey("UserId")
//                         .OnDelete(DeleteBehavior.Cascade)
//                         .IsRequired();

//                     b.Navigation("Discount");

//                     b.Navigation("ShippingAddress");

//                     b.Navigation("User");
//                 });

//             modelBuilder.Entity("StackBook.Models.OrderDetail", b =>
//                 {
//                     b.HasOne("StackBook.Models.Book", "Book")
//                         .WithMany("OrderDetails")
//                         .HasForeignKey("BookId")
//                         .OnDelete(DeleteBehavior.Cascade)
//                         .IsRequired();

//                     b.HasOne("StackBook.Models.Order", "Order")
//                         .WithMany("OrderDetails")
//                         .HasForeignKey("OrderId")
//                         .OnDelete(DeleteBehavior.Cascade)
//                         .IsRequired();

//                     b.Navigation("Book");

//                     b.Navigation("Order");
//                 });

//             modelBuilder.Entity("StackBook.Models.OrderHistory", b =>
//                 {
//                     b.HasOne("StackBook.Models.Order", "Order")
//                         .WithMany("OrderHistories")
//                         .HasForeignKey("OrderId")
//                         .OnDelete(DeleteBehavior.Cascade)
//                         .IsRequired();

//                     b.Navigation("Order");
//                 });

//             modelBuilder.Entity("StackBook.Models.Payment", b =>
//                 {
//                     b.HasOne("StackBook.Models.Order", "Order")
//                         .WithMany("Payments")
//                         .HasForeignKey("OrderId")
//                         .OnDelete(DeleteBehavior.Cascade)
//                         .IsRequired();

//                     b.Navigation("Order");
//                 });

//             modelBuilder.Entity("StackBook.Models.ReturnOrder", b =>
//                 {
//                     b.HasOne("StackBook.Models.Order", "Order")
//                         .WithOne("ReturnOrder")
//                         .HasForeignKey("StackBook.Models.ReturnOrder", "OrderId")
//                         .OnDelete(DeleteBehavior.Cascade)
//                         .IsRequired();

//                     b.HasOne("StackBook.Models.ShippingAddress", "ShippingAddress")
//                         .WithMany("ReturnOrders")
//                         .HasForeignKey("ShippingAddressId")
//                         .OnDelete(DeleteBehavior.Restrict)
//                         .IsRequired();

//                     b.Navigation("Order");

//                     b.Navigation("ShippingAddress");
//                 });

//             modelBuilder.Entity("StackBook.Models.Review", b =>
//                 {
//                     b.HasOne("StackBook.Models.Book", "Book")
//                         .WithMany("Reviews")
//                         .HasForeignKey("BookId")
//                         .OnDelete(DeleteBehavior.Cascade)
//                         .IsRequired();

//                     b.HasOne("StackBook.Models.User", "User")
//                         .WithMany("Reviews")
//                         .HasForeignKey("UserId")
//                         .OnDelete(DeleteBehavior.Cascade)
//                         .IsRequired();

//                     b.Navigation("Book");

//                     b.Navigation("User");
//                 });

//             modelBuilder.Entity("StackBook.Models.ShippingAddress", b =>
//                 {
//                     b.HasOne("StackBook.Models.User", "User")
//                         .WithMany("ShippingAddresses")
//                         .HasForeignKey("UserId")
//                         .OnDelete(DeleteBehavior.Cascade)
//                         .IsRequired();

//                     b.Navigation("User");
//                 });

//             modelBuilder.Entity("StackBook.Models.Book", b =>
//                 {
//                     b.Navigation("CartDetails");

//                     b.Navigation("OrderDetails");

//                     b.Navigation("Reviews");
//                 });

//             modelBuilder.Entity("StackBook.Models.Cart", b =>
//                 {
//                     b.Navigation("CartDetails");
//                 });

//             modelBuilder.Entity("StackBook.Models.Discount", b =>
//                 {
//                     b.Navigation("Order");
//                 });

//             modelBuilder.Entity("StackBook.Models.Order", b =>
//                 {
//                     b.Navigation("OrderDetails");

//                     b.Navigation("OrderHistories");

//                     b.Navigation("Payments");

//                     b.Navigation("ReturnOrder");
//                 });

//             modelBuilder.Entity("StackBook.Models.ShippingAddress", b =>
//                 {
//                     b.Navigation("Orders");

//                     b.Navigation("ReturnOrders");
//                 });

//             modelBuilder.Entity("StackBook.Models.User", b =>
//                 {
//                     b.Navigation("Carts");

//                     b.Navigation("Orders");

//                     b.Navigation("Reviews");

//                     b.Navigation("ShippingAddresses");
//                 });
// #pragma warning restore 612, 618
//         }
//     }
// }
