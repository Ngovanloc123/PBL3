@model X.PagedList.IPagedList<StackBook.ViewModels.BookRatingViewModel>
@using X.PagedList.Mvc.Core

@{
    var routeValues = ViewBag.RouteValues as RouteValueDictionary ?? new RouteValueDictionary();
    string action = ViewBag.ActionName as string;
}


<div class="row g-5">
    @if (Model != null && Model.Any())
    {
        if(Model.Count == 1) {
            var bookRating = Model[0];
            <a asp-area="Customer" asp-controller="Category" asp-action="BookDetail" asp-route-bookId="@bookRating.Book?.BookId"
               class="h-66 book-card text-decoration-none text-black d-block " style="
    height: 450px;
        ">

                <img src="@bookRating.Book?.ImageURL" alt="@bookRating.Book?.BookTitle" class="img-fluid" />

                <div class="book book-title fw-bold mt-2">@bookRating.Book?.BookTitle</div>

                <div class="book-rating text-warning mb-1">⭐ @bookRating.AverageRating</div>

                <div class="fs-8 text-muted">
                    @if (bookRating.Book!.Authors != null && bookRating.Book.Authors.Any())
                    {
                        foreach (var author in bookRating.Book.Authors)
                        {
                            <div>@author.AuthorName</div>
                        }
                    }
                </div>


                <div class="book-price text-danger fw-semibold mt-1">
                    $@bookRating.Book.?.Price
                </div>

            </a>
        }
        else {
            foreach (var bookRating in Model)
            {
                <div class="col-sm-6 col-md-4 col-lg-3">
                    <a asp-area="Customer" asp-controller="Category" asp-action="BookDetail" asp-route-bookId="@bookRating?.Book.BookId"
                       class="h-66 book-card text-decoration-none text-black d-block ">

                        <img src="@bookRating?.Book.ImageURL" alt="    @bookRating?.Book.BookTitle" class="img-fluid" />

                        <div class="book book-title fw-bold mt-2">@bookRating?.Book.BookTitle</div>

                        <div class="book-rating text-warning mb-1">⭐ @bookRating.AverageRating</div>

                        <div class="fs-8 text-muted">
                            @if (bookRating.Book!.Authors != null && bookRating.Book.Authors.Any())
                            {
                                foreach (var author in bookRating.Book.Authors)
                                {
                                    <div>@author.AuthorName</div>
                                }
                            }
                        </div>


                        <div class="book-price text-danger fw-semibold mt-1">
                            $@bookRating.Book?.Price
                        </div>

                    </a>
                </div>
            }
        }
        
    }
    <!-- Pagination -->
    <div class="d-flex justify-content-end mt-4">
        @Html.PagedListPager(Model, page =>
                 {
                     routeValues["page"] = page;
                     return Url.Action(action, routeValues);
                 },
                 new PagedListRenderOptions
        {
            Display = PagedListDisplayMode.IfNeeded,
            UlElementClasses = new[] { "pagination" },
            LiElementClasses = new[] { "page-item" },
            PageClasses = new[] { "page-link" },
            ActiveLiElementClass = "active",
            MaximumPageNumbersToDisplay = 5
        })
    </div>
</div>
